{
  "schemaVersion": "1.0.0",
  "name": "luacheck",
  "description": "Lua static analyzer supporting custom standards.",
  "languages": ["lua"],
  "phase": "lint",
  "runtime": {
    "type": "lua",
    "package": "luacheck",
    "minVersion": "1.2.0",
    "versionCommand": ["luacheck", "--version"]
  },
  "options": [
    {
      "name": "args",
      "type": "list[str]",
      "description": "Additional arguments appended to luacheck."
    },
    {
      "name": "config",
      "type": "path",
      "description": "luacheck configuration file."
    },
    {
      "name": "exclude-files",
      "type": "list[str]",
      "description": "Paths or globs excluded from linting."
    },
    {
      "name": "globals",
      "type": "list[str]",
      "description": "Global identifiers treated as defined."
    },
    {
      "name": "ignore",
      "type": "list[str]",
      "description": "Diagnostic codes or patterns to ignore."
    },
    {
      "name": "max-code-line-length",
      "type": "int",
      "description": "Maximum length for code lines (excluding comments/strings)."
    },
    {
      "name": "max-comment-line-length",
      "type": "int",
      "description": "Maximum length for comment lines."
    },
    {
      "name": "max-cyclomatic-complexity",
      "type": "int",
      "description": "Upper limit for function cyclomatic complexity."
    },
    {
      "name": "max-line-length",
      "type": "int",
      "description": "Maximum permitted line length."
    },
    {
      "name": "max-string-line-length",
      "type": "int",
      "description": "Maximum length for lines inside multi-line strings."
    },
    {
      "name": "quiet",
      "type": "bool",
      "description": "Suppress non-critical luacheck output."
    },
    {
      "name": "read-globals",
      "type": "list[str]",
      "description": "Globals allowed for read-only access."
    },
    {
      "name": "std",
      "type": "str",
      "description": "Standard globals set to load (e.g. luajit, love, ngx)."
    }
  ],
  "actions": [
    {
      "name": "lint",
      "command": {
        "strategy": "command_option_map",
        "config": {
          "base": ["luacheck", "--formatter", "plain", "--codes", "--ranges", "--no-color"],
          "appendFiles": false,
          "options": [
            { "setting": "config", "type": "path", "flag": "--config" },
            {
              "setting": ["max-line-length", "max_line_length"],
              "type": "value",
              "flag": "--max-line-length",
              "defaultFrom": "execution.line_length"
            },
            {
              "setting": [
                "max-code-line-length",
                "max_code_line_length",
                "max-line-length",
                "max_line_length"
              ],
              "type": "value",
              "flag": "--max-code-line-length",
              "defaultFrom": "execution.line_length"
            },
            {
              "setting": [
                "max-string-line-length",
                "max_string_line_length",
                "max-line-length",
                "max_line_length"
              ],
              "type": "value",
              "flag": "--max-string-line-length",
              "defaultFrom": "execution.line_length"
            },
            {
              "setting": [
                "max-comment-line-length",
                "max_comment_line_length",
                "max-line-length",
                "max_line_length"
              ],
              "type": "value",
              "flag": "--max-comment-line-length",
              "defaultFrom": "execution.line_length"
            },
            {
              "setting": ["max-cyclomatic-complexity", "max_cyclomatic_complexity"],
              "type": "value",
              "flag": "--max-cyclomatic-complexity",
              "defaultFrom": "complexity.max_complexity"
            },
            { "setting": "std", "type": "value", "flag": "--std" },
            { "setting": "globals", "type": "args", "flag": "--globals", "joinWith": "," },
            {
              "setting": ["read-globals", "read_globals"],
              "type": "args",
              "flag": "--read-globals",
              "joinWith": ","
            },
            { "setting": "ignore", "type": "args", "flag": "--ignore", "joinWith": "," },
            {
              "setting": ["exclude-files", "exclude_files"],
              "type": "path",
              "flag": "--exclude-files"
            },
            { "setting": "quiet", "type": "flag", "flag": "--quiet" },
            { "setting": "args", "type": "args" }
          ]
        }
      },
      "description": "Lint Lua sources using luacheck.",
      "parser": {
        "strategy": "parser_text",
        "config": {
          "transform": "pyqa.parsers.lua.parse_luacheck"
        }
      }
    }
  ],
  "fileExtensions": [".lua"],
  "tags": ["requires-luarocks"],
  "documentation": {
    "help": {
      "path": "docs/luacheck_help.txt",
      "format": "text"
    },
    "commandHelp": {
      "path": "docs/luacheck_cmd_help.txt",
      "format": "text"
    }
  }
}
